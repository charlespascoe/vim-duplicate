*vim-duplicate*  Quickly duplicate text in Vim

				Vim-Duplicate~

			Quickly duplicate text in Vim

==============================================================================
CONTENTS

  1. Mappings			|vim-duplicate-mappings|
  2. Other Operators		|vim-duplicate-other-operators|
  3. Options  			|vim-duplicate-options|

==============================================================================
MAPPINGS					      *vim-duplicate-mappings*

All mappings accept an optional [count] which controls how many duplicates to
create; defaults to 1 if omitted.

							*gd*
gd{motion}		Copy the text described by {motion} and paste it
			[count] times after the end of the {motion}. See
			|'g:duplicate_smart_motion'| for more information.

							*gdd*
gdd			Copy the current line and paste it [count] times
			below; essentially an alias of `yy[count]p` added for
			consistency.

==============================================================================
OTHER OPERATORS				       *vim-duplicate-other-operators*

TODO: Write this section

==============================================================================
OPTIONS						       *vim-duplicate-options*

						  *'g:duplicate_smart_motion'*

Controls the duplication behaviour when a |characterwise| motion spans
multiple lines. When set to `1`, a multi-line characterwise motion will be
treated as a |linewise| motion. Single-line characterwise motions will always
be characterwise regardless of this option.

For example, typing `gda{` inside braces that span multiple lines will include
additional text around the braces when this option is set. You can still have
this behaviour when this option is off by using the |o_V| forced motion, e.g.
`gdVa{`. The default is `1`.

`  let g:duplicate_smart_line = 1`


vim:tw=78:sts=0:sw=0:ts=8:noet:ft=help:norl:
